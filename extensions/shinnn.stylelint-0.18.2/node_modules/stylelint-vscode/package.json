{
  "_args": [
    [
      {
        "raw": "stylelint-vscode@https://registry.npmjs.org/stylelint-vscode/-/stylelint-vscode-5.1.0.tgz",
        "scope": null,
        "escapedName": "stylelint-vscode",
        "name": "stylelint-vscode",
        "rawSpec": "https://registry.npmjs.org/stylelint-vscode/-/stylelint-vscode-5.1.0.tgz",
        "spec": "https://registry.npmjs.org/stylelint-vscode/-/stylelint-vscode-5.1.0.tgz",
        "type": "remote"
      },
      "/Users/shinnn/github/vscode-stylelint"
    ]
  ],
  "_from": "stylelint-vscode@>=5.1.0 <6.0.0",
  "_id": "stylelint-vscode@5.1.0",
  "_inCache": true,
  "_location": "/stylelint-vscode",
  "_phantomChildren": {},
  "_requested": {
    "raw": "stylelint-vscode@https://registry.npmjs.org/stylelint-vscode/-/stylelint-vscode-5.1.0.tgz",
    "scope": null,
    "escapedName": "stylelint-vscode",
    "name": "stylelint-vscode",
    "rawSpec": "https://registry.npmjs.org/stylelint-vscode/-/stylelint-vscode-5.1.0.tgz",
    "spec": "https://registry.npmjs.org/stylelint-vscode/-/stylelint-vscode-5.1.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/stylelint-vscode/-/stylelint-vscode-5.1.0.tgz",
  "_shasum": "d1092b7c91456c5b56852689a4ba09e629b086b1",
  "_shrinkwrap": null,
  "_spec": "stylelint-vscode@https://registry.npmjs.org/stylelint-vscode/-/stylelint-vscode-5.1.0.tgz",
  "_where": "/Users/shinnn/github/vscode-stylelint",
  "author": {
    "name": "Shinnosuke Watanabe",
    "url": "https://github.com/shinnn"
  },
  "bugs": {
    "url": "https://github.com/shinnn/stylelint-vscode/issues"
  },
  "dependencies": {
    "array-to-error": "^1.1.1",
    "stylelint": "^7.4.2"
  },
  "description": "stylelint wrapper to easily integrate with Visual Studio Code",
  "devDependencies": {
    "@shinnn/eslint-config-node": "^3.0.0",
    "eslint": "^3.7.1",
    "istanbul": "^0.4.5",
    "tap-spec": "^4.1.1",
    "tape": "^4.6.2"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/shinnn/stylelint-vscode#readme",
  "keywords": [
    "stylelint",
    "style",
    "lint",
    "linter",
    "check",
    "checker",
    "css",
    "stylesheet",
    "validate",
    "validation",
    "vsc",
    "vscode",
    "diagnostic",
    "diagnostics",
    "promise",
    "promises",
    "then",
    "async",
    "asynchronous",
    "asynchronously"
  ],
  "license": "MIT",
  "name": "stylelint-vscode",
  "optionalDependencies": {},
  "readme": "# stylelint-vscode\n\n[![NPM version](https://img.shields.io/npm/v/stylelint-vscode.svg)](https://www.npmjs.com/package/stylelint-vscode)\n[![Build Status](https://travis-ci.org/shinnn/stylelint-vscode.svg?branch=master)](https://travis-ci.org/shinnn/stylelint-vscode)\n[![Coverage Status](https://img.shields.io/coveralls/shinnn/stylelint-vscode.svg)](https://coveralls.io/github/shinnn/stylelint-vscode)\n[![Dependency Status](https://david-dm.org/shinnn/stylelint-vscode.svg)](https://david-dm.org/shinnn/stylelint-vscode)\n[![devDependency Status](https://david-dm.org/shinnn/stylelint-vscode/dev-status.svg)](https://david-dm.org/shinnn/stylelint-vscode#info=devDependencies)\n\n[stylelint](https://github.com/stylelint/stylelint) wrapper to easily integrate with [Visual Studio Code](https://code.visualstudio.com/) [language server](https://github.com/Microsoft/vscode-languageserver-node)\n\n```javascript\nconst stylelintVSCode = require('stylelint-vscode');\n\nconst code = `\np {\n  line-height: .8;\n  color: red;\n}`;\n\nstylelintVSCode({\n  code,\n  config: {\n    rules: {\n      'number-leading-zero': 'always',\n      'color-named': ['never', {severity: 'warning'}]\n    }\n  }\n}).then(diagnostics => {\n  diagnostics;\n  /* =>\n    [\n      {\n        message: 'stylelint: Expected a leading zero (number-leading-zero)',\n        severity: 1,\n        range: {\n          start: {\n            line: 2,\n            character: 14\n          },\n          end: {\n            line: 2,\n            character: 14\n          }\n        }\n      },\n      {\n        message: 'stylelint: Unexpected named color \"red\" (color-no-named)',\n        severity: 2,\n        range: {\n          start: {\n            line: 3,\n            character: 9\n          },\n          end: {\n            line: 3,\n            character: 9\n          }\n        }\n      }\n    ]\n  */\n});\n```\n\n## Installation\n\n[Use npm.](https://docs.npmjs.com/cli/install)\n\n```\nnpm install stylelint-vscode\n```\n\n## API\n\n```javascript\nconst stylelintVSCode = require('stylelint-vscode');\n```\n\n### stylelintVSCode(*options*)\n\n*options*: `Object` (directly passed to [`stylelint.lint`](https://github.com/stylelint/stylelint/blob/master/docs/user-guide/node-api.md#the-stylelint-node-api))  \nReturn: [`Promise`](http://www.ecma-international.org/ecma-262/6.0/#sec-promise-constructor) instance\n\nIt works like [`stylelint.lint`](https://github.com/stylelint/stylelint/blob/893d050a24b47547fdf96c608f443f1f200eefa1/src/standalone.js#L16), except for:\n\n* It will be resolved with an array of [VS Code](https://github.com/Microsoft/vscode-extension-vscode)'s [`Diagnostic`](https://github.com/Microsoft/vscode-extension-vscode/blob/0.10.6/vscode.d.ts#L2220) instances.\n* It will be *rejected* (not resolved) when it takes invalid configs.\n  * In this case, it joins config errors into a single error object by using [array-to-error](https://github.com/shinnn/array-to-error).\n* It suppresses `No configuration found` error.\n  * Doing nothing when there is no configuration is a common behavior of editor plugins.\n\n```javascript\nconst stylelintVSCode = require('stylelint-vscode');\n\nstylelintVSCode({\n  code: '{foo}'\n}).then(diagnostics => {\n  diagnostics;\n  /* =>\n    {\n      message: 'stylelint: Unknown word',\n      severity: 1,\n      range: {\n        start: {\n          line: 0,\n          character: 1\n        },\n        end: {\n          line: 0,\n          character: 1\n        }\n      }\n    }\n  */\n});\n\nstylelintVSCode({\n  code: 'a {}',\n  config: {\n    rules: {\n      indentation: 2,\n      'function-comma-space-before': 'foo'\n    }\n  }\n}).catch(err => {\n  err.name;\n  //=> 'SyntaxError'\n\n  err.message;\n  //=> 'Expected option value for rule \"indentation\"\\nInvalid option value \"foo\" for rule \"function-comma-space-before\"'\n\n  err.reasons;\n  /* =>\n    [\n      'Expected option value for rule \"indentation\"',\n      'Invalid option value \"foo\" for rule \"function-comma-space-before\"'\n    ]\n  */\n});\n```\n\n## License\n\nCopyright (c) 2015 - 2016 [Shinnosuke Watanabe](https://github.com/shinnn)\n\nLicensed under [the MIT License](./LICENSE).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/shinnn/stylelint-vscode.git"
  },
  "scripts": {
    "coverage": "istanbul cover test/test.js",
    "pretest": "eslint --fix --config @shinnn/node index.js test/",
    "test": "node --throw-deprecation test/test.js | tap-spec"
  },
  "version": "5.1.0"
}
